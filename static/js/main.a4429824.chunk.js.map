{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","helpers/getData.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getData","url","a","fetch","response","json","getMovie","value","API_URL","defaultMovieCard","FindMovie","setMovies","useState","searchQuery","setSearchQuery","searchResult","setSearchResult","errorMessage","setErrorMessage","findMovie","result","Response","foundMovie","Title","Plot","Poster","imdbID","onSubmit","e","preventDefault","htmlFor","type","id","placeholder","cn","autoComplete","onChange","target","onClick","find","App","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4429824.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = MovieCard;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: MovieCard[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","const getData = async (url: string) => {\n  const response = await fetch(url);\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getMovie = async (value: string) => {\n  const API_KEY = '8905d446';\n  const API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}&t=${value}`;\n  const movie = await getData(API_URL);\n\n  return movie;\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport './FindMovie.scss';\nimport { getMovie } from '../../helpers';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: MovieCard[];\n  setMovies: (value: MovieCard[]) => void;\n};\n\nconst defaultMovieCard = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResult, setSearchResult] = useState<MovieCard>(defaultMovieCard);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const findMovie = async () => {\n    const result = await getMovie(searchQuery);\n\n    setErrorMessage('');\n\n    if (result.Response === 'True') {\n      const foundMovie: MovieCard = {\n        title: result.Title,\n        description: result.Plot,\n        imgUrl: result.Poster,\n        imdbUrl: `https://www.imdb.com/title/${result.imdbID}`,\n        imdbId: result.imdbID,\n      };\n\n      setSearchResult(foundMovie);\n\n      return;\n    }\n\n    setErrorMessage('Can&apos;t find a movie with such a title');\n  };\n\n  const checkMovie = () => {\n    if (!searchResult.imdbId) {\n      return;\n    }\n\n    if (movies.find(movie => movie.imdbId === searchResult.imdbId)) {\n      setErrorMessage('This movie is already on the list');\n\n      return;\n    }\n\n    setMovies([...movies, searchResult]);\n    setSearchResult(defaultMovieCard);\n    setSearchQuery('');\n  };\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    findMovie();\n  };\n\n  const handleClickSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    checkMovie();\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleFormSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': errorMessage })}\n              value={searchQuery}\n              autoComplete=\"off\"\n              onChange={e => {\n                setSearchQuery(e.target.value);\n                setErrorMessage('');\n              }}\n            />\n          </div>\n\n          {errorMessage && <p className=\"help is-danger\">{errorMessage}</p>}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleClickSubmit}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {searchResult.imdbId && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...searchResult} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<MovieCard[]>([...data]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}